// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Candidate {
  id                       String    @id @default(cuid())
  name                     String
  email                    String    @unique
  phone                    String
  resumeFileName           String
  resumeText               String    @db.Text
  resumeData               String?   @db.Text // Base64 encoded PDF data
  currentQuestionIndex     Int       @default(0)
  finalScore               Float?
  summary                  String?   @db.Text
  status                   String    @default("collecting-info") // collecting-info, in-progress, completed, paused
  startTime                DateTime?
  endTime                  DateTime?
  currentQuestionStartTime DateTime?
  createdAt                DateTime  @default(now())
  updatedAt                DateTime  @updatedAt

  answers   Answer[]
  questions Question[]

  @@map("candidates")
}

model Question {
  id            String   @id @default(cuid())
  text          String   @db.Text
  difficulty    String // easy, medium, hard
  timeLimit     Int
  candidateId   String
  questionIndex Int
  createdAt     DateTime @default(now())

  candidate Candidate @relation(fields: [candidateId], references: [id], onDelete: Cascade)
  answers   Answer[]

  @@map("questions")
}

model Answer {
  id        String   @id @default(cuid())
  answer    String   @db.Text
  timeSpent Int
  score     Float?
  feedback  String?  @db.Text
  createdAt DateTime @default(now())

  questionId  String
  candidateId String

  question  Question  @relation(fields: [questionId], references: [id], onDelete: Cascade)
  candidate Candidate @relation(fields: [candidateId], references: [id], onDelete: Cascade)

  @@map("answers")
}
